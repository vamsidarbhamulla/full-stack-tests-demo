name: Dynamic Application Security Tests with Docker
on:
  push:
    paths:
      - backend/**
      - tests/security-tests/** 
      - .github/workflows/security-test.yml 
  pull_request:
    branches: [ main, master ]

env:
  TEST_ENV: local
  CI: true    
jobs:
  run-docker-security-test:
    name: Run Security Tests on Docker
    runs-on: ubuntu-22.04
    container: 
      image: zaproxy/zap-stable
      env:
        ZAP_API_KEY: ${{ secrets.ZAP_API_KEY }}
        TZ: 'America/Winnipeg'
    steps:
      - uses: actions/checkout@v2
      - name: 'Setup jq'
        uses: dcarbone/install-jq-action@v3
        with:
          version: '1.7'
          force: 'false'
      - name: 'Check jq'
        # language=sh
        run: |
          which jq
          jq --version
      - name: Run Flask Backend Server
        uses: actions/setup-python@v5
        with:
          python-version: '3.13' 
      - run: |
            pwd 
            ls -lR 
            cd backend 
            pip install -r requirments.txt 
            FLASK_APP=task_with_swagger.py flask run -h localhost -p 5500 &
            token=`curl -X POST http://localhost:5500/client_login -d 'userName=Admin&email=admin@test.com&password=admin@1234' | jq -j '.token')`
            echo "api_auth_token=$token" >> $GITHUB_ENV
      - name: Run DAST Tests with API Scan
        uses: zaproxy/action-api-scan@v0.9.0
        env:
          api_auth_token: ${{ env.api_auth_token }}
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          docker_name: 'ghcr.io/zaproxy/zaproxy:stable'
          format: openapi
          fail_action: false
          target: 'https://localhost:5500/swagger.json'
          cmd_options: '--hook=tests/security-tests/zap/zap_hook.py -r tests/security-tests/test-results/zaptestreport.html'
      - uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: security-tests-report
          path: tests/security-tests/test-results/
          retention-days: 30  