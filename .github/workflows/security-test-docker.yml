name: Dynamic Application Security Tests with Docker
on:
  push:
    paths:
      - backend/**
      - tests/security-tests/** 
      - .github/workflows/security-test-docker.yml 
  pull_request:
    branches: [ main, master ]

env:
  TEST_ENV: local
  CI: true  
  RE_INITIALIZE_DB: true  
jobs:
  run-docker-security-test:
    name: Run Automated Application Security Tests on Docker
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v2
      - name: Install Docker using Docker's official script
        run: |
          curl -fsSL https://get.docker.com -o get-docker.sh
          sudo sh get-docker.sh
      - name: Run DAST Tests
        run: |
            chmod a+w $GITHUB_WORKSPACE 
            mkdir -p ./tests/security-tests/test-results
            docker pull zaproxy/zap-stable
            docker run -v "$GITHUB_WORKSPACE":/zap/wrk/:rw --network=host \
            --add-host host.docker.internal:host-gateway \
            -e TZ=America/Winnipeg -e app_domain=$app_domain \
            -e api_auth_token=token -e ZAP_AUTH_HEADER \
            -e ZAP_AUTH_HEADER_VALUE -e ZAP_AUTH_HEADER_SITE \
            -e RE_INITIALIZE_DB=true -e TEST_TYPE=ci -e TEST_ENV=local \
            -t zaproxy/zap-stable bash -c \
            "pwd && ls -lR /zap/wrk && \
            pip install -r /zap/wrk/backend/requirments.txt && \
            export PATH=$PATH:/root/.local/bin && \
            kill $(pgrep -f flask) || true && \
            export RE_INITIALIZE_DB=true && \
            cd /zap/wrk/backend && chmod 755 database.db && FLASK_APP=task_with_swagger.py /home/zap/.local/bin/flask run -h localhost -p 5500 & \
            sleep 10 && \
            cd /zap/wrk/tests/security-tests && \
            curl -X GET http://localhost:5500/health && \
            curl -X GET http://localhost:5500/swagger.json && \
            zap-api-scan.py -I -t http://localhost:5500/swagger.json \
            -f openapi -P 5500 \
            -J /zap/wrk/tests/security-tests/test-results/report_json.json \
            -w /zap/wrk/test/security-tests/test-results/report_md.md \
            -r /zap/wrk/test/security-tests/test-results/report_html.html \
            --hook=/zap/wrk/tests/security-tests/zap/zap_hook.py"
      - uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: security-tests-report
          path: tests/security-tests/test-results/
          retention-days: 30  